{"version":3,"sources":["resources/images/keyswitch sync /^/.//.*$","components/images/no_image.svg","resources/images/keyswitch/aliaz_silent.jpg","resources/images/keyswitch/aqua_zilent_62.jpg","resources/images/keyswitch/aqua_zilent_67.jpg","resources/images/keyswitch/cherry_mx_blue.jpg","resources/images/keyswitch/cherry_mx_brown.jpg","resources/images/keyswitch/cherry_mx_red.jpg","resources/images/keyswitch/cherry_mx_rgb_silent_pink.jpg","resources/images/keyswitch/cherry_mx_silver.jpg","resources/images/keyswitch/gateron_black.jpg","resources/images/keyswitch/gateron_ink_black.jpg","resources/images/keyswitch/gateron_ink_blue.jpg","resources/images/keyswitch/gateron_ink_red.jpg","resources/images/keyswitch/gateron_ink_yellow.jpg","resources/images/keyswitch/gateron_milk_milk_black.jpg","resources/images/keyswitch/gateron_silent_black.jpg","resources/images/keyswitch/gateron_silent_brown.jpg","resources/images/keyswitch/gateron_silent_red.jpg","resources/images/keyswitch/gateron_yellow.jpg","resources/images/keyswitch/hako_true.jpg","resources/images/keyswitch/kailh_box_black.jpg","resources/images/keyswitch/kailh_box_brown.jpg","resources/images/keyswitch/kailh_box_red.jpg","resources/images/keyswitch/kailh_box_white.jpg","resources/images/keyswitch/kailh_pro_burgundy.jpg","resources/images/keyswitch/kailh_pro_light_green.jpg","resources/images/keyswitch/kailh_pro_purple.jpg","resources/images/keyswitch/kailh_speed_copper.jpg","resources/images/keyswitch/kailh_speed_gold.jpg","resources/images/keyswitch/kailh_speed_pink.jpg","resources/images/keyswitch/kailh_speed_silver.jpg","resources/images/keyswitch/novelkeys_box_burnt_orange.jpg","resources/images/keyswitch/novelkeys_box_dark_yellow.jpg","resources/images/keyswitch/novelkeys_box_pale_blue.jpg","resources/images/keyswitch/novelkeys_box_royal.jpg","resources/images/keyswitch/novelkeys_cream.jpg","resources/images/keyswitch/roselios.jpg","resources/images/keyswitch/sakurios.jpg","resources/images/keyswitch/tealios.jpg","resources/images/keyswitch/turquoise_tealios_63_5.jpg","resources/images/keyswitch/turquoise_tealios_65.jpg","resources/images/keyswitch/zealios_v2_62.jpg","resources/images/keyswitch/zealios_v2_65.jpg","resources/images/keyswitch/zealios_v2_67.jpg","resources/images/keyswitch/zealios_v2_78.jpg","resources/images/keyswitch/zilent_v2_62.jpg","resources/images/keyswitch/zilent_v2_65.jpg","resources/images/keyswitch/zilent_v2_67.jpg","resources/images/keyswitch/zilent_v2_78.jpg","components/images/close.svg","reducers/KeyswitchList.js","keyboard/index.js","reducers/KeyswitchDetail.js","reducers/Printer.js","reducers/KeystrokeHistory.js","reducers/RootReducer.js","printer/printer.js","sagas/printer.js","resources/printerSettings.js","sagas/keyboardShortcut.js","sagas/rootSaga.js","actions/index.js","containers/KeyboardShortcutListener.js","components/KeyswitchDetail.js","containers/KeyswitchDetail.js","components/KeyswitchListItem.js","components/KeyswitchList.js","containers/KeyswitchList.js","components/App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","defaultState","keyswitches","keyswitchList","state","action","type","productId","console","log","some","item","assign","filter","keymapData","require","switchData","allKeyIds","allProductIds","isKeyIdValid","keyId","includes","isProductIdValid","getKeyswitchData","keyswitchDetail","printer","keystrokeHistory","keyboardShortcutState","rootReducer","combineReducers","keyboardShortcut","formatText","text","param","formatProduct","data","name","feel","isSilent","footer","formatProducts","productIds","useSingular","isSingular","length","body","sort","a","b","flat","concat","postToPrinterWithTimeout","printRequest","watchPrintRequest","postToPrinter","jsonString","fetch","method","headers","timeoutDelay","race","posts","call","timeout","delay","payload","items","put","JSON","stringify","takeEvery","watchKeyboardShortcut","defaultMatch","matched","isHexDigitOrSpace","keycode","matchers","strokeHistory","roi","slice","String","fromCharCode","apply","toLowerCase","productKey","keymap","select","newHistory","keystroke","matcher","match","rootSaga","all","nextId","KeyboardShortcutListener","handleKeystroke","event","props","keyCode","document","addEventListener","this","removeEventListener","React","Component","connect","dispatch","keyswitchImages","KeyswitchDetail","addKeyswitch","showKeyswitch","enableAddButton","imageUrl","manufacturer","description","reason","className","value","onClick","ids","Math","floor","random","getRandomKeySwitchData","activeElement","blur","disabled","src","alt","shouldEnableAddButton","currentProductId","KeyswitchListItem","removeItem","KeyswitchList","removeAll","printList","isPrinterBlocked","sw","key","isBlocked","removeKeyswitch","App","Boolean","window","location","hostname","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c652a9cf.chunk.js","sourcesContent":["var map = {\n\t\"./aliaz_silent.jpg\": 43,\n\t\"./aqua_zilent_62.jpg\": 44,\n\t\"./aqua_zilent_67.jpg\": 45,\n\t\"./cherry_mx_blue.jpg\": 46,\n\t\"./cherry_mx_brown.jpg\": 47,\n\t\"./cherry_mx_red.jpg\": 48,\n\t\"./cherry_mx_rgb_silent_pink.jpg\": 49,\n\t\"./cherry_mx_silver.jpg\": 50,\n\t\"./gateron_black.jpg\": 51,\n\t\"./gateron_ink_black.jpg\": 52,\n\t\"./gateron_ink_blue.jpg\": 53,\n\t\"./gateron_ink_red.jpg\": 54,\n\t\"./gateron_ink_yellow.jpg\": 55,\n\t\"./gateron_milk_milk_black.jpg\": 56,\n\t\"./gateron_silent_black.jpg\": 57,\n\t\"./gateron_silent_brown.jpg\": 58,\n\t\"./gateron_silent_red.jpg\": 59,\n\t\"./gateron_yellow.jpg\": 60,\n\t\"./hako_true.jpg\": 61,\n\t\"./kailh_box_black.jpg\": 62,\n\t\"./kailh_box_brown.jpg\": 63,\n\t\"./kailh_box_red.jpg\": 64,\n\t\"./kailh_box_white.jpg\": 65,\n\t\"./kailh_pro_burgundy.jpg\": 66,\n\t\"./kailh_pro_light_green.jpg\": 67,\n\t\"./kailh_pro_purple.jpg\": 68,\n\t\"./kailh_speed_copper.jpg\": 69,\n\t\"./kailh_speed_gold.jpg\": 70,\n\t\"./kailh_speed_pink.jpg\": 71,\n\t\"./kailh_speed_silver.jpg\": 72,\n\t\"./novelkeys_box_burnt_orange.jpg\": 73,\n\t\"./novelkeys_box_dark_yellow.jpg\": 74,\n\t\"./novelkeys_box_pale_blue.jpg\": 75,\n\t\"./novelkeys_box_royal.jpg\": 76,\n\t\"./novelkeys_cream.jpg\": 77,\n\t\"./roselios.jpg\": 78,\n\t\"./sakurios.jpg\": 79,\n\t\"./tealios.jpg\": 80,\n\t\"./turquoise_tealios_63_5.jpg\": 81,\n\t\"./turquoise_tealios_65.jpg\": 82,\n\t\"./zealios_v2_62.jpg\": 83,\n\t\"./zealios_v2_65.jpg\": 84,\n\t\"./zealios_v2_67.jpg\": 85,\n\t\"./zealios_v2_78.jpg\": 86,\n\t\"./zilent_v2_62.jpg\": 87,\n\t\"./zilent_v2_65.jpg\": 88,\n\t\"./zilent_v2_67.jpg\": 89,\n\t\"./zilent_v2_78.jpg\": 90\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 19;","module.exports = __webpack_public_path__ + \"static/media/no_image.39727d41.svg\";","module.exports = __webpack_public_path__ + \"static/media/aliaz_silent.dfa9d945.jpg\";","module.exports = __webpack_public_path__ + \"static/media/aqua_zilent_62.28773d4d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/aqua_zilent_67.2bc194a1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cherry_mx_blue.cbf15d80.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cherry_mx_brown.8a079999.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cherry_mx_red.7ed55ce3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cherry_mx_rgb_silent_pink.f053baa5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cherry_mx_silver.2127d4f1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gateron_black.9ac33522.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gateron_ink_black.387e4972.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gateron_ink_blue.f00e2318.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gateron_ink_red.f9b683d9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gateron_ink_yellow.3f4f38c0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gateron_milk_milk_black.b3b00da9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gateron_silent_black.dc36bacb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gateron_silent_brown.cd5cf5a9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gateron_silent_red.c8cee5d3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gateron_yellow.ed9c67c8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hako_true.51f9bfc5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kailh_box_black.48bbe92c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kailh_box_brown.f5a2f523.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kailh_box_red.19ea6585.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kailh_box_white.d5ae3b9b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kailh_pro_burgundy.3464b612.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kailh_pro_light_green.bf78ac32.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kailh_pro_purple.dbcff79e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kailh_speed_copper.f2206917.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kailh_speed_gold.6e3ee9b5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kailh_speed_pink.736ba066.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kailh_speed_silver.f4fbf484.jpg\";","module.exports = __webpack_public_path__ + \"static/media/novelkeys_box_burnt_orange.797a3010.jpg\";","module.exports = __webpack_public_path__ + \"static/media/novelkeys_box_dark_yellow.ae3c1d1d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/novelkeys_box_pale_blue.725210c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/novelkeys_box_royal.72ed6b67.jpg\";","module.exports = __webpack_public_path__ + \"static/media/novelkeys_cream.3259c28b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/roselios.9a7f6edd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sakurios.a38f346e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tealios.6fe11d00.jpg\";","module.exports = __webpack_public_path__ + \"static/media/turquoise_tealios_63_5.b77a2f94.jpg\";","module.exports = __webpack_public_path__ + \"static/media/turquoise_tealios_65.13b75a34.jpg\";","module.exports = __webpack_public_path__ + \"static/media/zealios_v2_62.3b75fed4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/zealios_v2_65.b7ef7ddf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/zealios_v2_67.4dd2a614.jpg\";","module.exports = __webpack_public_path__ + \"static/media/zealios_v2_78.909cae33.jpg\";","module.exports = __webpack_public_path__ + \"static/media/zilent_v2_62.4971de5b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/zilent_v2_65.06347ce0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/zilent_v2_67.d59b5daa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/zilent_v2_78.e69385d7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/close.127e0632.svg\";","const defaultState = {keyswitches: []}\n\nconst keyswitchList = (state = defaultState, action) => {\n    switch (action.type) {\n        case 'ADD_SW':            \n            // Do nothing if default\n            if (action.productId === '') {\n                console.log('Skipping default')\n                return state;\n            }\n\n            // skip if item with the produckey already exists\n            if (state.keyswitches.some(item => item.productId === action.productId)) {\n                console.log(action.productId + ' already exists.');\n                return state;\n            }\n\n            // Add item\n            console.log('Added ' + action.productId);\n            return Object.assign({}, state, {\n                keyswitches: [\n                    ...state.keyswitches,\n                    {\n                        id: action.id,\n                        productId: action.productId\n                    }\n                ]\n            });\n        case 'REMOVE_SW':\n            console.log('Removed ' + action.id);\n            return Object.assign({}, state, {\n                keyswitches: state.keyswitches.filter(item => item.id !== action.id)\n            });\n        case 'REMOVE_SW_ALL':\n            console.log('Removed All Switches');\n            return Object.assign({}, state, {\n                keyswitches: []\n            });\n        default:\n            break;\n    }\n    return state;\n}\n\nexport default keyswitchList;","const keymapData = require('../resources/KeymapData.json')\nconst switchData = require('../resources/SwitchData.json')\n\nconst allKeyIds = Object.keys(keymapData);\nconst allProductIds = Object.keys(switchData);\nexport const defaultProductId = ''\nswitchData[defaultProductId] = {}\n\n// Keymap\nexport const isKeyIdValid = (keyId) => {\n    return allKeyIds.includes(keyId);\n}\nexport const keymap = (keyId) => {\n    return (isKeyIdValid(keyId)? keymapData[keyId].productKey: defaultProductId);\n}\n\n// Switch Data\nexport const isProductIdValid = (productId) => {\n    return allProductIds.includes(productId);\n}\nexport const getKeyswitchData = (productId) => {\n    return isProductIdValid(productId)? switchData[productId]: switchData[defaultProductId];\n}\nexport const getRandomKeySwitchData = () => {\n    const ids = allProductIds.filter(id => id !== defaultProductId)\n    return ids[Math.floor(Math.random() * ids.length)];\n}\n","import { isProductIdValid } from \"../keyboard\";\n\nconst defaultState = {productId: ''}\n\nconst keyswitchDetail = (state=defaultState, action) => {\n    switch (action.type) {\n        case 'SHOW_SW':\n            if (isProductIdValid(action.productId)) {\n                return Object.assign({}, state, {\n                    productId: action.productId\n                })\n            }\n            break;\n        default:\n            break;\n    }\n    return state;\n}\n\nexport default keyswitchDetail;","const defaultState = {'isBlocked': false}\n\nconst printer = (state=defaultState, action) => {\n    switch (action.type) {\n        case 'BLOCK_PRINTER':\n            return Object.assign({}, state, {\n                'isBlocked': true\n            })\n        case 'UNBLOCK_PRINTER':\n            return Object.assign({}, state, {\n                'isBlocked': false\n            })\n        default:\n            break;\n    }\n    return state;\n}\n\nexport default printer;","const defaultState = {keystrokeHistory: []};\n\nconst keyboardShortcutState = (state=defaultState, action) => {\n\n    switch (action.type) {\n        case 'UPDATE_KEYSTROKE_HISTORY':\n            state = Object.assign({}, state, {keystrokeHistory: action.keystrokeHistory});\n            break;\n        default:\n            break;\n    }\n    return state;\n}\n\nexport default keyboardShortcutState;","import { combineReducers } from 'redux'\nimport keyswitchList from './KeyswitchList'\nimport keyswitchDetail from './KeyswitchDetail'\nimport printer from './Printer';\nimport keyboardShortcutState from './KeystrokeHistory';\n\nconst combinedReducer = combineReducers({\n    keyboardShortcut: keyboardShortcutState,\n    keyswitchList: keyswitchList,\n    keyswitchDetail: keyswitchDetail,\n    printer: printer\n});\n\nconst rootReducer = combinedReducer;\n\nexport default rootReducer;\n","import { getKeyswitchData } from '../keyboard';\n\nconst formatText = (text, param) => {\n    return ({\n        'text':text,\n        ...param\n    })\n}\n\nexport const formatProduct = (data) => {\n    return ([\n        formatText('* ' + data.name),\n        formatText('    [' + data.feel + (data.isSilent ? '/Silent' : '') + ']'),\n        formatText('')\n    ])\n}\n\nconst header = useSingular => ([\n    formatText('SELF MADE', {'double_width':true, 'justify':'C'}),\n    formatText('KEYBOARDS', {'double_width':true, 'justify':'C'}),\n    formatText('IN  JAPAN', {'double_width':true, 'justify':'C'}),\n    formatText(''),\n    formatText('Tsukuba Mini Maker Faire 2020', {'justify':'C'}),\n    formatText('Key Switch Tester', {'justify':'C'}),\n    formatText(''),\n    formatText('--- --- ---', {'justify':'C'}),\n    formatText(''),\n    formatText(useSingular? 'Your choice:' : 'Your choices:', {'double_width':true, 'justify':'C'}),\n    formatText(''),\n])\n\nconst footer = [\n    formatText('--- --- ---', {'justify':'C'}),\n    formatText(''),\n    formatText('HAPPY TYPING!', {'double_width':true, 'justify':'C'}),\n    formatText(''),\n    formatText(''),\n    formatText('')\n]\n\nexport const formatProducts = (productIds) => {   \n    const isSingular = productIds.length === 1;\n    const data = productIds.map(getKeyswitchData);\n    const dataSorted = data.sort((a, b) => (a.name > b.name) ? 1 : -1)\n\n    const body = dataSorted.map(formatProduct).flat()\n    return({'lines':header(isSingular).concat(body).concat(footer)})\n    \n}","import { takeEvery, put, call, race, delay } from 'redux-saga/effects'\nimport { formatProducts } from '../printer/printer';\nimport { printerURL } from '../resources/printerSettings';\n\nfunction postToPrinter(jsonString) {\n    return fetch(printerURL, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: jsonString,\n    })\n}\n\nfunction* postToPrinterWithTimeout(jsonString, timeoutDelay=10000) {\n    const {posts, timeout} = yield race({\n        posts: call(postToPrinter, jsonString),\n        timeout: delay(timeoutDelay),\n    })\n\n    if (posts) {\n        // post\n    }\n    else {        \n        // timeout.\n        // May not be error (long print takes more than 10s).\n        yield console.log('Printer Timeout.')\n    }\n}\n\nfunction* printRequest(payload) {\n    if(payload.items.length === 0) {\n        yield console.log ('Nothing to print.')\n    }\n    else {\n        yield put ({type: 'BLOCK_PRINTER'});\n\n        const productIds = payload.items.map(item => item['productId']);\n        const data = formatProducts(productIds);\n        const jsonString = JSON.stringify(data);\n\n        try {\n            yield postToPrinterWithTimeout(jsonString);\n        } catch (error) {\n            yield console.log(error);\n        } finally {\n            yield put ({type: 'UNBLOCK_PRINTER'});\n        }\n        \n    }\n    \n}\n\nexport function* watchPrintRequest() {\n    yield takeEvery('PRINT_LIST', printRequest)\n}","export const printerURL = 'http://localhost:5000/thermal-printer/v1/print';","import { isKeyIdValid, isProductIdValid, keymap } from \"../keyboard\";\nimport { takeEvery, put, select } from 'redux-saga/effects'\n\nconst defaultMatch = {matched: false};\n\nconst isHexDigitOrSpace = keycode => {\n    return (\n        keycode === 32 || // Space\n        (keycode >= 48 && keycode <= 57) || // 0-9\n        (keycode >= 65 && keycode <= 70)    // A-F\n    );\n}\nconst keyswitchMatcher = strokeHistory => {\n    // Command always ends with space\n    if (strokeHistory[strokeHistory.length-1] !== 32) {\n        return defaultMatch;\n    }\n\n    // Check if command consists of three valid strokes incl. space\n    const roi = strokeHistory.slice(-3).filter(isHexDigitOrSpace);\n    if (roi.length !== 3) {\n        return defaultMatch;\n    }\n\n    // Validate Key Id and Product Id\n    const keyId = String.fromCharCode.apply(null, roi.slice(0, 2)).toLowerCase();\n\n    // Match Keys\n    if (!isKeyIdValid(keyId)) {\n        return defaultMatch;\n    }\n    const productId = keymap(keyId);\n    if (!isProductIdValid(productId)) {\n        return defaultMatch;\n    }\n    return {\n        matched: true,\n        action: {\n            type: 'SHOW_SW',\n            productId: productId\n        }\n    }\n}\n\nconst matchers = [keyswitchMatcher];\n\nfunction* keyboardShortcut(payload) {\n\n    // Construct new key history\n    const state = yield select(state => state.keyboardShortcut);\n    const newHistory = [...state.keystrokeHistory, payload.keystroke]\n\n    // Apply matchers until match\n    let matched = false\n    for (const matcher of matchers) {\n        let match = matcher(newHistory);\n        if (match.matched) {\n            matched = true;\n            yield put(match.action);\n            break;\n        }\n    }\n    if (!matched) {\n        // Record history if no match found\n        yield put ({\n            type: 'UPDATE_KEYSTROKE_HISTORY',\n            keystrokeHistory: newHistory\n        })\n    }\n}\n\nexport function* watchKeyboardShortcut() {\n    yield takeEvery('KBD_SHORTCUT', keyboardShortcut);\n}","import { all } from 'redux-saga/effects';\nimport { watchPrintRequest } from \"./printer\";\nimport { watchKeyboardShortcut } from './keyboardShortcut';\n\nexport default function* rootSaga() {\n    yield all([\n        watchPrintRequest(),\n        watchKeyboardShortcut()\n    ]);\n}","/* List */\nlet nextId = 0\nexport const addKeyswitch = productId => ({\n    type: 'ADD_SW',\n    id: nextId++,\n    productId\n})\n\nexport const removeKeyswitch = id => ({\n    type: 'REMOVE_SW',\n    id\n})\n\nexport const removeAllKeyswitches = () => ({\n    type: 'REMOVE_SW_ALL'\n})\n\n\n/* Detail View */\nexport const showKeyswitch = productId => ({\n    type: 'SHOW_SW',\n    productId\n})\n\n\n/* Key Strokes */\nexport const handleKeystroke = keystroke => ({\n    type: 'KBD_SHORTCUT',\n    keystroke\n})\n\n/* Print */\nexport const printKeyswitchList = items => ({\n    type: 'PRINT_LIST',\n    items\n})","import React from 'react'\nimport { connect } from 'react-redux'\nimport { handleKeystroke } from '../actions'\n\n\nclass KeyboardShortcutListener extends React.Component {\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeystroke);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeystroke);\n    }\n\n    handleKeystroke = (event) => {\n        this.props.handleKeystroke(event.keyCode);\n    }\n\n    render() {\n        return (null);\n    }\n}\n\n\nconst mapStateToProps = state => ({})\nconst mapDispatchToProps = dispatch => ({\n    handleKeystroke: keystroke => dispatch(handleKeystroke(keystroke))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KeyboardShortcutListener);","import React from 'react';\nimport { getKeyswitchData, getRandomKeySwitchData } from '../keyboard'\n\nconst randomLabel = 'ランダム'\nconst addToListLabel = 'リストに追加'\nconst keyswitchImages = require.context('../resources/images/keyswitch/', true)\n\nconst KeyswitchDetail = ({productId, addKeyswitch, showKeyswitch, enableAddButton}) => {\n\n    const switchData = getKeyswitchData(productId);\n    const imageUrl = switchData['imageUrl'] ? keyswitchImages('./' + switchData['imageUrl']) : require('./images/no_image.svg');\n    const name = switchData['name'] || '';\n    const manufacturer = switchData['manufacturer'] || ''\n    const description = switchData['description'] || ''\n    const reason = enableAddButton.reason || ''\n\n\n    return (\n        <div id=\"KeyswitchDetail\">\n            <div id=\"KeyswitchDetailControl\">\n                <input\n                    className='btn'\n                    type='button'\n                    value={randomLabel}\n                    onClick={() => {\n                        showKeyswitch(getRandomKeySwitchData());\n                        document.activeElement.blur();\n                        }} />\n                <input\n                    className='btn'\n                    type='button'\n                    value={addToListLabel}\n                    onClick={() => {\n                        addKeyswitch(productId);\n                        document.activeElement.blur();\n                    }}\n                    disabled={!enableAddButton.value? 'disabled' : ''} />\n                \n                \n                <div className='reason'>{reason}</div>\n            </div>\n\n            <img src={ imageUrl } alt=\"switch\"/>\n            <div className='name'>{ name }</div>\n            <div className='manufacturer'>{ manufacturer }</div>\n            <div className='description'>{ description }</div>\n        </div>\n    );\n}\n\nexport default KeyswitchDetail;","import { connect } from 'react-redux'\nimport { addKeyswitch, showKeyswitch } from '../actions'\nimport KeyswitchDetail from '../components/KeyswitchDetail'\n\nconst maxSwitchCount = 10\n\nconst shouldEnableAddButton = (state) => {\n\n    if (state.keyswitchList.keyswitches.length >= maxSwitchCount) {\n        return {\n            value: false,\n            reason: '選択できるのは' + String(maxSwitchCount) + '個までです'\n        }\n    }\n\n    const currentProductId = state.keyswitchDetail.productId;\n    if (state.keyswitchList.keyswitches.some(item => item.productId === currentProductId)) {\n        return {\n            value: false,\n            reason: '選択されています'\n        };\n    }\n    \n    if (currentProductId === '') {\n        return {\n            value: false,\n            reason: 'スイッチを選択してください'\n        };\n    }    \n    return {value: true};\n}\n\n\n\nconst mapStateToProps = state => ({\n    productId: state.keyswitchDetail.productId,\n    enableAddButton: shouldEnableAddButton(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n    addKeyswitch: productId => dispatch(addKeyswitch(productId)),\n    showKeyswitch: productId => dispatch(showKeyswitch(productId))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KeyswitchDetail)","import React from 'react'\nimport { getKeyswitchData } from '../keyboard'\nconst keyswitchImages = require.context('../resources/images/keyswitch/', true)\n\nfunction KeyswitchListItem({productId, removeItem}) {\n    const switchData = getKeyswitchData(productId);\n    const imageUrl = switchData['imageUrl']? keyswitchImages('./' + switchData['imageUrl']) : require('../components/images/no_image.svg');\n    return (        \n        <li className=\"KeyswitchListItem\">\n            <img className='remove-btn' src={require('../components/images/close.svg')} alt='close' onClick={removeItem}/>\n            <img src={imageUrl} alt=\"switch\"/>\n            <span>{switchData['name']}</span>\n        </li>\n    )\n}\n\nexport default KeyswitchListItem","import React from 'react'\nimport KeyswitchListItem from './KeyswitchListItem'\n\nconst printLabel = 'リストを印刷'\nconst clearLabel = 'すべて削除'\n\nconst KeyswitchList = ({keyswitches, removeItem, removeAll, printList, isPrinterBlocked}) => {\n    return (\n        <div id=\"KeyswitchList\">\n            <div id=\"KeyswitchListControl\">\n                <input\n                    className='btn'\n                    type=\"button\"\n                    value={printLabel}\n                    onClick={() => {printList(keyswitches); document.activeElement.blur();}}\n                    disabled={isPrinterBlocked ? 'disabled' : ''}\n                />\n                <input\n                    className='btn btn-danger'\n                    type=\"button\"\n                    value={clearLabel}\n                    onClick={() => {removeAll(); document.activeElement.blur();}}\n                />\n            </div>\n            <div id=\"KeyswitchListContent\">\n                <ul>\n                    {keyswitches.map(\n                        sw => (<KeyswitchListItem key={sw.id} removeItem={() => removeItem(sw.id)} {...sw}/>)\n                    )}\n                </ul>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default KeyswitchList;","import { connect } from 'react-redux'\nimport KeyswitchList from '../components/KeyswitchList'\nimport { removeKeyswitch, printKeyswitchList, removeAllKeyswitches } from '../actions'\n\nconst mapStateToProps = state => ({\n    keyswitches: state.keyswitchList.keyswitches,\n    isPrinterBlocked: state.printer.isBlocked\n})\n\nconst mapDispatchToProps = dispatch => ({\n    removeItem: id => dispatch(removeKeyswitch(id)),\n    removeAll: () => dispatch(removeAllKeyswitches()),\n    printList: ids => dispatch(printKeyswitchList(ids))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KeyswitchList)\n\n","import React from 'react';\n\nimport KeyboardShortcutListener from '../containers/KeyboardShortcutListener'\nimport KeyswitchDetail from '../containers/KeyswitchDetail';\nimport KeyswitchList from '../containers/KeyswitchList';\n\nfunction App() {\n    return (\n        <div id=\"App\">\n            <KeyboardShortcutListener />\n            <KeyswitchDetail/>\n            <KeyswitchList />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootReducer from './reducers/RootReducer'\nimport rootSaga from './sagas/rootSaga'\n\n\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(sagaMiddleware)\n);\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}